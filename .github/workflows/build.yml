# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and deploy bioParallel

on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        description: Release tag
        required: true

jobs:
  build:
    name: Build the program for win-x64 and linux-x64
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - run: tree .
    - name: Publish linux-x64
      run: dotnet publish -c Release --runtime linux-x64 -o ${{env.DOTNET_ROOT}}/BioParallel/BioParallel_linux-x64
    - name: Publish win-x64
      run: dotnet publish -c Release --runtime win-x64 -o ${{env.DOTNET_ROOT}}/BioParallel/BioParallel_win-x64
    - name: Upload a Build Artifacts for deployment job
      uses: actions/upload-artifact@v3.1.2
      with:
        name: artifact
        path: ${{env.DOTNET_ROOT}}/BioParallel
        retention-days: 1
        
  deploy:
    name: Deploy the program for win-x64 and linux-x64 on Github Releases
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: build
    environment:
      name: 'Production'
    steps:
    - name: Download a Build Artifact from build job
      uses: actions/download-artifact@v3.0.2
      with:
        name: artifact
    - run: tree .
    - run: zip -r bioParallel_${{ inputs.tag }}_linux-x64.zip BioParallel_linux-x64/.
    - run: zip -r bioParallel_${{ inputs.tag }}_win-x64.zip BioParallel_win-x64/.
    - run: tree .
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          bioParallel_${{ inputs.tag }}_win-x64.zip
          bioParallel_${{ inputs.tag }}_linux-x64.zip
        tag_name: ${{ inputs.tag }}
